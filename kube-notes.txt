#kubernetes deployment file required fields
apiVersion:
kind:
metadata:
spec:

#deployment kinds and version
KIND                VERSION
---------------------------------
1.  POD             v1
2.  Service         v1
3.  Replica Set     apps/v1
4.  Deployment      apps/v1

#deployment metadata
metadata:
  name:  my-app-pod
  labels:
    app: my-app
    type: front-end

#deployment spec
spec:
  containers:
    - name:  nginx-container
      image: nginx

#start kubernetes cluster (using minikube for testing)
minikube start --vm-driver=virtualbox (or hyperv on windows or hyperkit on a mac)

#check status of kubernetes cluster
minikube status

#create deployments
kubectl create -f definition.yml

#view deployments
$ kubectl get deployment
NAME   READY   UP-TO-DATE   AVAILABLE   AGE
repo   1/1     1            1           4s
rest   1/1     1            1           32s
todo   1/1     1            1           34s

#view deployments in all the namespaces
kubectl get deployments --all-namespaces
NAMESPACE              NAME                        READY   UP-TO-DATE   AVAILABLE   AGE
default                repo                        0/1     1            0           5d
default                rest                        0/1     1            0           5d
default                todo                        0/1     1            0           5d

#You can delete all the pods in a single namespace with this command:
kubectl delete --all pods --namespace=foo

#You can also delete all the deployments in a single namespace with this command:
kubectl delete --all deployments --namespace=foo

#view running pods
$ kubectl get pods
NAME                    READY   STATUS    RESTARTS   AGE
repo-559447ffd-rv5md    1/1     Running   0          28m
rest-85648c5cf6-slbv5   1/1     Running   0          28m
todo-74cc5fc78b-lhbm9   1/1     Running   0          28m

#view more details of containers in the pods
kubectl describe pods

#get current state of services
$ kubectl get services
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   3h39m

#create a new service and expose traffic on port 7083
kubectl expose deployment/repo --type="NodePort" --port 7083
kubectl describe services/repo

#extract assigned port
export NODE_PORT=$(kubectl get services/repo -o go-template='{{(index .spec.ports 0).nodePort}}')
echo NODE_PORT=$NODE_PORT

#test app through exposed service
curl $(minikube ip):$NODE_PORT